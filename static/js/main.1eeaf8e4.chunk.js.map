{"version":3,"sources":["serviceWorker.ts","Components/Basic/Theme.tsx","Components/Basic/Header.tsx","Components/Basic/Footer.tsx","Components/Pages/AboutPage.tsx","Components/Basic/AspectRatio.tsx","Components/Basic/Game.tsx","KingEngine/Animation/KingAnimation.ts","KingEngine/Animation/KingTile.ts","KingEngine/KingEngine.ts","KingEngine/KingGame.ts","Components/Containers/GameContainer.tsx","Components/Pages/GamePage.tsx","index.tsx","Routes/MainRouter.tsx"],"names":["Boolean","window","location","hostname","match","Theme","createMuiTheme","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","drawer","width","Header","classes","React","useState","isDrawerOpen","setDrawerOpen","openDrawer","className","AppBar","position","Toolbar","IconButton","edge","color","onClick","Typography","variant","SwipeableDrawer","open","onOpen","onClose","List","ListItem","button","key","component","Link","to","ListItemIcon","style","green","ListItemText","primary","blue","Copyright","align","href","Date","getFullYear","footer","padding","marginTop","Footer","Container","maxWidth","About","gutterBottom","outerWrapper","props","height","paddingBottom","ratio","toString","innerWrapper","top","right","bottom","left","AspectRatio","children","Game","KingSprite","KingAnimation","pixiCanvasRef","useRef","useEffect","current","pixiApp","resizeTo","appendChild","view","engine","initialize","aspectRatio","ref","Grid","container","direction","justify","alignItems","item","Button","saveGame","loadGame","ATTACK_ANIM_SPRITES","Set","Goblin","GoblinSword","Golem","PACIFIST_ANIM_REPLACEMENTS","Map","AttackLeft","Left","AttackRight","Right","AttackUp","Up","AttackDown","Down","Die","getAnimation","res","sprite","anim","has","get","animName","spritesheet","animations","KingTileType","getTile","tile","textures","KingEngine","kingGame","fpsText","this","stop","loader","add","process","load","resources","onAssetsLoaded","renderer","backgroundColor","Pixi","SCALE_MODE","NEAREST","gameContainer","stage","addChild","ticker","FPS","delta","update","start","scale","x","y","text","Math","round","KingGame","ratPos","ratSprite","sprites","tiles","Dog","animationSpeed","play","map","SCREEN_HEIGHT","SCREEN_WIDTH","Grass","JSON","stringify","game","state","parse","createGameEngine","transparent","kingEngine","savedState","localStorage","getItem","loadSavedGame","gameState","getSaveGame","setItem","loadGameFromUI","GameContainer","useMemo","undefined","GamePage","ReactDOM","render","ThemeProvider","CssBaseline","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1eeaf8e4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst Theme = createMuiTheme();\n\nexport default Theme;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { ListItem, ListItemIcon, ListItemText, SwipeableDrawer, List } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport { Link } from \"react-router-dom\";\n\nimport { green, blue } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawer: {\n    width: 250\n  }\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n\n  const [isDrawerOpen, setDrawerOpen] = React.useState(false);\n\n  const openDrawer = () => {\n    setDrawerOpen(true);\n  };\n  const closeDrawer = () => {\n    setDrawerOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" onClick={openDrawer}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Goblin King\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <SwipeableDrawer open={isDrawerOpen} onOpen={openDrawer} onClose={closeDrawer}>\n        <List className={classes.drawer}>\n          <ListItem button key=\"Play\" component={Link} to=\"/\">\n            <ListItemIcon><SportsEsportsIcon style={{ color: green[800] }} /></ListItemIcon>\n            <ListItemText primary=\"Play\" />\n          </ListItem>\n          <ListItem button key=\"About\" component={Link} to=\"/about\">\n            <ListItemIcon><InfoIcon style={{ color: blue[800] }} /></ListItemIcon>\n            <ListItemText primary=\"About\" />\n          </ListItem>\n        </List>\n      </SwipeableDrawer>\n    </div>\n  );\n};\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://www.linkedin.com/in/gurwindergulati/\">\n        Gurwinder Singh Gulati\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: 'auto'\n  },\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"sm\">\n        <Copyright />\n      </Container>\n    </footer>\n  );\n}","import React, { Fragment } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport Header from '../Basic/Header';\nimport Footer from '../Basic/Footer';\n\nexport default function About() {\n  return (\n    <Fragment>\n      <Header />\n      \n      <Container component=\"main\" maxWidth=\"sm\">\n        <Typography variant=\"h2\" component=\"h1\" gutterBottom align=\"center\">\n          Goblin King\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom align=\"center\">\n          Created for 7drl by Gurwinder Singh Gulati\n        </Typography>\n        <Typography variant=\"body1\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n        </Typography>\n      </Container>\n\n      <Footer />\n    </Fragment>\n  );\n}","import * as React from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface AspectRatioProps {\n  children?: any\n  ratio: number\n}\n\nconst useStyles = makeStyles({\n  outerWrapper: (props: AspectRatioProps) => ({\n    position: 'relative',\n    width: '100%',\n    height: 0,\n    paddingBottom: ((1 / props.ratio) * 100).toString() + '%',\n  }),\n  innerWrapper: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  }\n});\n\nfunction AspectRatio(props: AspectRatioProps) {\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes.outerWrapper}>\n      <div className={classes.innerWrapper}>\n        {props.children}\n      </div>\n    </div>\n  );\n}\n\nexport default AspectRatio","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\n\nimport * as Pixi from \"pixi.js\"\n\nimport AspectRatio from './AspectRatio';\nimport KingEngine from '../../KingEngine/KingEngine';\nimport KingGame from '../../KingEngine/KingGame';\n\nexport type GameProps = {\n  aspectRatio: number,\n  pixiApp: Pixi.Application,\n  engine: KingEngine,\n  game: KingGame,\n  saveGame: () => string,\n  loadGame: () => void,\n  loadGameFromUI: (gameState: string) => void,\n}\n\nfunction Game(props: GameProps) {\n  const pixiCanvasRef = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    if (pixiCanvasRef.current != null) {\n      props.pixiApp.resizeTo = pixiCanvasRef.current;\n      pixiCanvasRef.current.appendChild(props.pixiApp.view);\n\n      props.engine.initialize();\n    }\n  })\n\n  return (\n    <Container>\n      <AspectRatio ratio={props.aspectRatio}>\n        <div style={{width: '100%', height: '100%'}} ref={pixiCanvasRef} />\n      </AspectRatio>\n\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={2}>\n        <Grid item>\n          <Button variant=\"contained\" onClick={() => props.saveGame()}>Save</Button>\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" onClick={() => props.loadGame()}>Load</Button>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Game;","import * as Pixi from 'pixi.js';\n\nexport enum KingSprite {\n  Bat = \"bat\",\n  Bee = \"bee\",\n  BigWorm = \"big_worm\",\n  CatBlack = \"cat_black\",\n  CatWhite = \"cat_white\",\n  Dog = \"dog\",\n  Eyeball = \"eyeball\",\n  Ghost = \"ghost\",\n  Goblin = \"goblin\",\n  GoblinSword = \"goblin_sword\",\n  Golem = \"golem\",\n  ManEaterFlower = \"man_eater_flower\",\n  Pumpking = \"pumpking\",\n  Rat = \"rat\",\n  Slime = \"slime\",\n  SmallWorm = \"small_worm\",\n  Snake = \"snake\",\n}\n\nexport enum KingAnimation {\n  Left = \"left\",\n  Right = \"right\",\n  Up = \"up\",\n  Down = \"down\",\n  AttackLeft = \"left_attack\",\n  AttackRight = \"right_attack\",\n  AttackUp = \"up_attack\",\n  AttackDown = \"down_attack\",\n  Die = \"die\",\n}\n\nconst ATTACK_ANIM_SPRITES = new Set([KingSprite.Goblin, KingSprite.GoblinSword, KingSprite.Golem]);\nconst PACIFIST_ANIM_REPLACEMENTS = new Map([\n  [KingAnimation.AttackLeft, KingAnimation.Left],\n  [KingAnimation.AttackRight, KingAnimation.Right],\n  [KingAnimation.AttackUp, KingAnimation.Up],\n  [KingAnimation.AttackDown, KingAnimation.Down],\n  [KingAnimation.Die, KingAnimation.Down],\n]);\n\nexport function getAnimation(res: Pixi.LoaderResource, sprite: KingSprite, anim: KingAnimation): Pixi.Texture[] {\n  if (!ATTACK_ANIM_SPRITES.has(sprite)) {\n    anim = PACIFIST_ANIM_REPLACEMENTS.get(anim) ?? anim;\n  }\n\n  const animName = sprite + \"/\" + anim;\n  return res.spritesheet?.animations[animName];\n}\n\nexport default { KingSprite, KingAnimation, getAnimation };","import * as Pixi from 'pixi.js';\n\nexport enum KingTileType {\n  Grass = \"base_out_atlas-118.png\",\n}\n\nexport function getTile(res: Pixi.LoaderResource, tile: KingTileType): Pixi.Texture {\n  return res.textures!![tile];\n}\n\nexport default { KingTileType, getTile };","import * as Pixi from 'pixi.js';\nimport KingGame from './KingGame';\n\nexport const SCREEN_WIDTH = 1280;\nexport const SCREEN_HEIGHT = 780;\nexport const TILE_SIZE = 32;\n\nclass KingEngine {\n  pixiApp: Pixi.Application;\n  fpsText: Pixi.Text | undefined;\n  kingGame: KingGame;\n\n  constructor(pixiApp: Pixi.Application, kingGame: KingGame) {\n    this.pixiApp = pixiApp;\n    this.kingGame = kingGame;\n  }\n\n  initialize() {\n    this.pixiApp.stop();\n\n    this.pixiApp.loader\n      .add(\"sprites\", process.env.PUBLIC_URL + \"/assets/images/sprites.json\")\n      .add(\"tiles\", process.env.PUBLIC_URL + \"/assets/images/tiles.json\")\n      .load((loader, resources) => this.onAssetsLoaded(loader, resources));\n    \n    this.pixiApp.renderer.backgroundColor = 0xFFFF00;\n    Pixi.settings.SCALE_MODE = Pixi.SCALE_MODES.NEAREST;\n  }\n\n  onAssetsLoaded(loader: Pixi.Loader, resources: Partial<Record<string, Pixi.LoaderResource>>) {\n    const gameContainer = new Pixi.Container();\n    this.pixiApp.stage.addChild(gameContainer);\n    \n    this.fpsText = new Pixi.Text(\"FPS: \" + this.pixiApp.ticker.FPS);\n    this.pixiApp.stage.addChild(this.fpsText);\n\n    this.kingGame.initialize(gameContainer, resources[\"sprites\"]!!, resources[\"tiles\"]!!);\n\n    this.pixiApp.ticker.add(delta => this.update(delta));\n    this.pixiApp.start();\n  }\n\n  update(delta: number) {\n    this.pixiApp.stage.scale.x = this.pixiApp.view.width / SCREEN_WIDTH\n    this.pixiApp.stage.scale.y = this.pixiApp.view.height / SCREEN_HEIGHT\n    this.kingGame.update(delta);\n\n    this.fpsText!.text = \"FPS: \" + Math.round(this.pixiApp.ticker.FPS);\n  }\n}\n\n\nexport default KingEngine;","import * as Pixi from 'pixi.js';\n\nimport { KingAnimation, KingSprite, getAnimation } from './Animation/KingAnimation';\nimport { KingTileType, getTile } from './Animation/KingTile';\nimport { SCREEN_HEIGHT, SCREEN_WIDTH, TILE_SIZE } from './KingEngine';\n\nclass KingGame {\n  ratPos: [number, number];\n\n  ratSprite: Pixi.AnimatedSprite | undefined;\n\n  constructor() {\n    this.ratPos = [32, 32];\n  }\n\n  initialize(gameContainer: Pixi.Container, sprites: Pixi.LoaderResource, tiles: Pixi.LoaderResource) {\n    this.ratSprite = new Pixi.AnimatedSprite(getAnimation(sprites, KingSprite.Dog, KingAnimation.Right));\n    this.ratSprite.animationSpeed = 1.0 / 10.0;\n    this.ratSprite.play();\n\n    const map = new Pixi.Container();\n    for (var y = 0; y < SCREEN_HEIGHT / TILE_SIZE; y++) {\n      for (var x = 0; x < SCREEN_WIDTH / TILE_SIZE; x++) {\n        const tile = new Pixi.Sprite(getTile(tiles, KingTileType.Grass));\n        tile.x = x * TILE_SIZE;\n        tile.y = y * TILE_SIZE;\n        map.addChild(tile);\n      }\n    }\n\n    gameContainer.addChild(map);\n    gameContainer.addChild(this.ratSprite);\n  }\n\n  update(delta: number) {\n    if (this.ratSprite != null) {\n      this.ratSprite.x = this.ratPos[0];\n      this.ratSprite.y = this.ratPos[1];\n    }\n  }\n\n  getSaveGame(): string {\n    return JSON.stringify({ ratPos: this.ratPos });\n  }\n\n  loadSavedGame(game: string) {\n    const state = JSON.parse(game);\n    this.ratPos = state.ratPos;\n  }\n}\n\nexport default KingGame;","import React from 'react';\n\nimport * as Pixi from 'pixi.js';\n\nimport Game, { GameProps } from '../Basic/Game';\nimport KingGame from '../../KingEngine/KingGame';\nimport KingEngine from '../../KingEngine/KingEngine';\n\n\nconst SAVE_GAME_NAME = \"goblin_king_game\";\n\nfunction createGameEngine(): GameProps {\n  const pixiApp = new Pixi.Application({transparent: false});\n  const kingGame = new KingGame();\n  const kingEngine = new KingEngine(pixiApp, kingGame);\n\n  const saveGame = () => {\n    const gameState = kingGame.getSaveGame();\n    localStorage.setItem(SAVE_GAME_NAME, gameState);\n    return gameState;\n  }\n  const loadGame = () => {\n    const savedState = localStorage.getItem(SAVE_GAME_NAME);\n    if (savedState != null) {\n      kingGame.loadSavedGame(savedState);\n    }\n  }\n  const loadGameFromUI = (gameState: string) => { kingGame.loadSavedGame(gameState) }\n\n  loadGame();\n\n  return {\n    aspectRatio: 16 / 9,\n    pixiApp,\n    game: kingGame,\n    engine: kingEngine,\n    saveGame: saveGame,\n    loadGame: loadGame,\n    loadGameFromUI: loadGameFromUI,\n  }\n}\n\nexport default function GameContainer() {\n  const engine = React.useMemo(createGameEngine, undefined);\n\n  return (\n    <Game {...engine} />\n  );\n}","import React, { Fragment } from 'react';\n\nimport Footer from '../Basic/Footer';\nimport Header from '../Basic/Header';\nimport GameContainer from '../Containers/GameContainer';\n\nexport default function GamePage() {\n  return (\n    <Fragment>\n      <Header />\n    \n      <GameContainer />\n\n      <Footer />\n    </Fragment>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport Theme from './Components/Basic/Theme';\n\nimport MainRouter from './Routes/MainRouter';\n\nReactDOM.render(\n  <ThemeProvider theme={Theme}>\n    <CssBaseline />\n    <MainRouter />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport AboutPage from \"../Components/Pages/AboutPage\";\nimport GamePage from '../Components/Pages/GamePage';\n\nexport default function MainRouter() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/about\">\n          <AboutPage />\n        </Route>\n        <Route path=\"/\">\n          <GamePage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}"],"sourceRoot":""}